!function o(n,h,r){function l(e,t){if(!h[e]){if(!n[e]){var i="function"==typeof require&&require;if(!t&&i)return i(e,!0);if(p)return p(e,!0);throw new Error("Cannot find module '"+e+"'")}var s=h[e]={exports:{}};n[e][0].call(s.exports,function(t){var i=n[e][1][t];return l(i||t)},s,s.exports,o,n,h,r)}return h[e].exports}for(var p="function"==typeof require&&require,t=0;t<r.length;t++)l(r[t]);return l}({1:[function(t,i,e){t("./infinity-screen.config.js"),t("./infinity-screen.inertion-state.js"),t("./infinity-screen.overlay.js"),t("./infinity-screen.map.js")},{"./infinity-screen.config.js":2,"./infinity-screen.inertion-state.js":3,"./infinity-screen.map.js":4,"./infinity-screen.overlay.js":5}],2:[function(t,i,e){i.exports=function(){this.triggerMenuAttributeSelector="data-infinity-scroll",this.inertia=!0,this.axisX=!0,this.axisY=!0}},{}],3:[function(t,i,e){function s(t){this._impulseX=0,this._impulseY=0,this._screen=t,this._startX=void 0,this._startY=void 0,this._readyToUpdatePos=!0}s.prototype.updateImpulses=function(t){self._readyToUpdatePos=!1;var i=performance.now()-this._startDragTime,e=(t.clientX-this._startX)/i,s=(t.clientY-this._startY)/i;this._impulseX=50*e,this._impulseY=50*s},s.prototype.updateStartPos=function(t){var i=this;this._readyToUpdatePos&&(i._readyToUpdatePos=!1,this._startX=t.clientX,this._startY=t.clientY,this._startDragTime=performance.now(),setTimeout(function(){i._readyToUpdatePos=!0},100))},s.prototype.inertionMove=function(){if(!this._screen.isCatched){var t=this,i=this._impulseX-this._impulseX/40,e=this._impulseY-this._impulseY/40;.1<Math.abs(this._impulseX-e)&&.1<Math.abs(this._impulseY-i)&&setTimeout(function(){t._screen.moveTo(i,e),t._impulseX=i,t._impulseY=e,t.inertionMove(i,e)},16)}},i.exports=s},{}],4:[function(t,i,e){function s(t,i){this.width=void 0,this.height=void 0,this.posX=void 0,this.posY=void 0,this.elm=void 0,this._copies=[],this.config=i,this.screenElm=t,this.resizeFn=this.resizeUnbindedFn(),this.updateSizes(),this.init()}s.prototype.initListeners=function(){window.addEventListener("resize",this.resizeFn)},s.prototype.updateSizes=function(){var t=this.screenElm.getBoundingClientRect();this.width=t.width,this.height=t.height,this.posX=-t.width,this.posY=-t.height},s.prototype.resizeUnbindedFn=function(){var i=this,e=InfinityScroll.Map.toPx,s=!1;return function(t){s||(s=!0,setTimeout(function(){s=!1,i.updateSizes(),i.setState(),i._copies.forEach(function(t){t.style.width=e(i.width),t.style.height=e(i.height)})},100))}},s.prototype.setPosX=function(t){!isNaN(t)&&this.config.axisX&&(this.posX=this.posX+t,this.posX=this.posX<0?this.posX:-this.width,this.posX=0-2*this.width<this.posX?this.posX:-this.width,this.elm.style.left=InfinityScroll.Map.toPx(this.posX))},s.prototype.setPosY=function(t){!isNaN(t)&&this.config.axisY&&(this.posY=this.posY+t,this.posY=this.posY<0?this.posY:-this.height,this.posY=0-2*this.height<this.posY?this.posY:-this.height,this.elm.style.top=InfinityScroll.Map.toPx(this.posY))},s.prototype.init=function(){var t=InfinityScroll.Map.toPx,i=1;this.config.axisX&&(i*=3),this.config.axisY&&(i*=3),this.elm=document.createElement("div"),this.elm.classList.add("map"),this.elm.style["user-select"]="none";for(var e=0;e<i;e++){var s=this.screenElm.cloneNode(!0);s.style.float="left",s.style.width=t(this.width),s.style.height=t(this.height),this.elm.appendChild(s),this._copies.push(s)}this.screenElm.innerHTML="",this.screenElm.style.position="relative",this.screenElm.style.overflow="hidden",this.elm.style.position="absolute",this.setState(),this.initListeners(),this.screenElm.appendChild(this.elm)},s.prototype.setState=function(){var t=InfinityScroll.Map.toPx;this.config.axisY&&(this.elm.style.height=t(this.height*(this.config.axisY?3:1)),this.elm.style.top=t(this.posY)),this.config.axisX&&(this.elm.style.width=t(this.width*(this.config.axisX?3:1)),this.elm.style.left=t(this.posX))},s.toPx=function(t){return t+"px"},i.exports=s},{}],5:[function(t,i,e){Overlay=function(t){this._scroll=t,this.isShowed=!1,this._elm=document.createElement("div"),this._tempMousePosX=void 0,this._tempMousePosY=void 0,this._uncatchFn=this._uncatchUnbindedFn(),this._move=this._moveUnbindedFn(),this.init()},Overlay.prototype.init=function(){var t=this._elm;t.style.position="fixed",t.style["z-index"]=1e4,t.style.display="none",t.style.height="100%",t.style.width="100%",t.style.top="0",t.style.left="0",t.style.cursor="move",this.initListeners(),document.body.appendChild(t)},Overlay.prototype.initListeners=function(){this._elm.addEventListener("mouseup",this._uncatchFn)},Overlay.prototype.hide=function(){this.isShowed&&(this._elm.style.display="none",document.body.style["user-select"]=null,this.isShowed=!1)},Overlay.prototype.show=function(){this.isShowed||(this._elm.style.display="block",document.body.style["user-select"]="none",this.isShowed=!0)},Overlay.prototype._uncatchUnbindedFn=function(){var t=this;return function(){t._scroll.isCatched=!1,t._tempMousePosX=void 0,t._tempMousePosY=void 0,t.hide()}},Overlay.prototype._moveUnbindedFn=function(){var i=this;return function(t){i.isShowed&&("mousemove"===t.type&&(i._scroll.moveTo(t.clientX-i._tempMousePosX,t.clientY-i._tempMousePosY),i._tempMousePosX=t.clientX,i._tempMousePosY=t.clientY),"touchmove"===t.type&&(i._scroll.moveTo(t.touches[0].clientX-i._tempMousePosX,t.touches[0].clientY-i._tempMousePosY),i._tempMousePosX=t.touches[0].clientX,i._tempMousePosY=t.touches[0].clientY))}},i.exports=Overlay},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
